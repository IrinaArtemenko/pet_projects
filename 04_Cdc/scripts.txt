
--По заданию у таблиц должны быть PK, но я их убрала так как в источнике и приемнике есть дубли по ID
create table Source
(
 id        int 
,attr1     int 
,attr2     int
,gregor_dt date
--,constraint id_s_pk primary key(id)
)

insert into Source(id,attr1,attr2,gregor_dt)  --1 набор данных
values
 (1,11,111,'01.01.2023')
,(2,22,222,'01.01.2023')
,(3,33,333,'01.01.2023')
,(5,55,555,'01.01.2023')
,(6,66,666,'01.01.2023')


create table Target
(
 id              int 
,attr1           int 
,attr2           int
,start_dt        date
,end_dt          date
,ctl_action      varchar(1)
,ctl_datechange  date
--,constraint id_t_pk primary key(id)
)

select * from Target  
select * from Source


insert into Source(id,attr1,attr2,gregor_dt)   --2 набор данных
values
 (1,11,111,'01.02.2023')
,(2,22,222,'01.02.2023')
,(3,33,333,'01.02.2023')
,(4,44,444,'01.02.2023')
,(5,55,5555,'01.02.2023')

insert into Source(id,attr1,attr2,gregor_dt) --3 набор данных
values
(1,11,111,'01.08.2023')
,(2,222,222,'01.08.2023')
,(3,33,333,'01.08.2023')
,(5,55,5555,'01.08.2023')

Решение:

-- Пришлось захардкодить end_dt и ctl_datechange для того, чтоб показать результат как в примерах и для тестирования загрузки среза.
-- Из-за этого так же не обернула скрипты в прцоедуру.
--zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz

update Target
set ctl_action = 'D'
   , end_dt = '2023-07-31'--'2023-01-31'------CURRENT_DATE -1
   , ctl_datechange = '2023-08-01'--'2023-02-01'------CURRENT_DATE
where id in(select t.id
              from Target as t
              left join (select *
                           from Source
                           where gregor_dt in (select max(gregor_dt)  from Source))   as s on t.id = s.id and s.gregor_dt <> t.start_dt
            where s.id is null and t.ctl_action <> 'D');
		
update Target
set ctl_action = 'U'
   , end_dt = '2023-07-31'--'2023-01-31'------CURRENT_DATE -1
   , ctl_datechange = '2023-08-01'--'2023-02-01'------CURRENT_DATE
where id in(select t.id
              from Target as t
         full join (select *
                     from Source
                    where gregor_dt in (select max(gregor_dt) 
								          from Source)) as s on t.id = s.id and s.gregor_dt <> t.start_dt
             where s.id is not null 
               and t.id is not null 
               and (s.attr1 <> t.attr1 or s.attr2 <> t.attr2)
               and t.ctl_action <> 'U');


insert into Target
select s.id
     , s.attr1
	 , s.attr2
	 , s.gregor_dt
	 , '9999-12-31' as end_dt
	 , 'I'          as ctl_action
	 , '2023-08-01' as ctl_datechange   --CURRENT_DATE
from Target as t
full join (select *
             from Source
            where gregor_dt in (select max(gregor_dt) 
								  from Source)) as s on t.id = s.id and s.gregor_dt <> t.start_dt
where  t.id is  null 
  or (s.attr1 <> t.attr1 or s.attr2 <> t.attr2 and gregor_dt = ctl_datechange);


--zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz

Пример решения с определением динамически даты:

create or replace procedure load_slice()
language plpgsql
as $$
begin
    update Target
       set ctl_action = 'D'
         , end_dt = CURRENT_DATE -1
         , ctl_datechange = CURRENT_DATE
     where id in(select t.id
                   from Target as t
                   left join (select *
                                from Source
                               where gregor_dt in (select max(gregor_dt)  from Source)) as s on t.id = s.id and s.gregor_dt <> t.start_dt
                 where s.id is null and t.ctl_action <> 'D');

    update Target
       set ctl_action = 'U'
         , end_dt = CURRENT_DATE -1
         , ctl_datechange = CURRENT_DATE
     where id in(select t.id
                   from Target as t
              full join (select *
                          from Source
                         where gregor_dt in (select max(gregor_dt)
                                               from Source)) as s on t.id = s.id and s.gregor_dt <> t.start_dt
                         where s.id is not null
                           and t.id is not null
                           and (s.attr1 <> t.attr1 or s.attr2 <> t.attr2)
                           and t.ctl_action <> 'U');


    insert into Target
    select s.id
         , s.attr1
         , s.attr2
         , s.gregor_dt
         , '9999-12-31' as end_dt
         , 'I'          as ctl_action
         , CURRENT_DATE as ctl_datechange
      from Target as t
      full join (select *
                   from Source
                  where gregor_dt in (select max(gregor_dt)
                                        from Source)) as s on t.id = s.id and s.gregor_dt <> t.start_dt
     where t.id is  null
        or (s.attr1 <> t.attr1 or s.attr2 <> t.attr2 and gregor_dt = ctl_datechange);

    commit;
end;$$



call load_slice();


